
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	ПрочитатьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСтраницыЛичногоКабинета" Тогда
		ЭтаФорма.ОбновитьОтображениеДанных(Элементы.Список);
		Элементы.Список.Обновить();
		ПрочитатьНастройки();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьФайл(Команда)
	
	Перем ВыбранноеИмя;
	Перем АдресВременногоХранилища;

	Если ПодключитьРасширениеРаботыСФайлами() Тогда
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		ДиалогОткрытияФайла.Фильтр = НСтр("ru = 'Все файлы (*.*)|*.*'");
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите файл'");
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			ВыбранноеИмя = ДиалогОткрытияФайла.ПолноеИмяФайла;
			Файл = Новый Файл(ВыбранноеИмя);
			ОписаниеФайла = СтрШаблон(НСтр("ru = 'Исходный файл: %1; Размер: %2 байт; Изменен: %3'"), Файл.Имя, Файл.Размер(), Файл.ПолучитьВремяИзменения());			
			Родитель = Элементы.Список.ТекущийРодитель;
			АдресВременногоХранилища = "";
			НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗагрузитьФайлЗавершение", ЭтотОбъект, Новый Структура("АдресВременногоХранилища,ОписаниеФайла,ИмяФайла,ПолноеИмя,Путь,Родитель,ЭтоФайл", АдресВременногоХранилища, ОписаниеФайла, Файл.Имя, Файл.ПолноеИмя, Файл.Путь, Родитель, Истина)), АдресВременногоХранилища, ВыбранноеИмя, Ложь,);
		КонецЕсли;
	Иначе		
		ПоказатьПредупреждение(,НСтр("ru = 'Данная возможность недоступна, так как не подключено расширение работы с файлами.'", "ru"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлЗавершение(Результат, Адрес, ВыбранноеИмя, ДополнительныеПараметры) Экспорт
    
    Если Результат И Адрес <> Неопределено и Адрес <> "" Тогда
        ПоместитьФайлОбъекта(Адрес, ДополнительныеПараметры);
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Ошибка при загрузке файла в хранилище...'"));
	КонецЕсли;
	ОповеститьОбИзменении(Тип("СправочникСсылка.ВебСайт"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПапку(Команда)

	Перем ВыбранноеИмя;
	Перем АдресВременногоХранилища;

	Если ПодключитьРасширениеРаботыСФайлами() Тогда
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ДиалогОткрытияФайла.Каталог = "";
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите каталог'");
		МассивПапок = Новый Массив;
		МассивФайлов = Новый Массив;
		Родитель = Элементы.Список.ТекущийРодитель;
		Если Родитель = Неопределено тогда
			Родитель = ПредопределенноеЗначение("Справочник.ВебСайт.ПустаяСсылка");
		КонецЕсли;

		Если ДиалогОткрытияФайла.Выбрать() Тогда			
			МассивНайденныхФайлов = НайтиФайлы(ДиалогОткрытияФайла.Каталог, "*", Истина);			
			МассивСтруктур = Новый Массив;
			Для Каждого Файл Из МассивНайденныхФайлов Цикл
				Если Файл.ЭтоФайл() Тогда
					МассивФайлов.Добавить(Файл);
				Иначе
					МассивПапок.Добавить(Файл);	
				КонецЕсли
			КонецЦикла;
			
			Для Каждого Файл Из МассивПапок Цикл
				ВыбранноеИмя = Файл.ПолноеИмя;
				Файл = Новый Файл(ВыбранноеИмя);
				АдресВременногоХранилища = "";
				ПоместитьФайлОбъекта(АдресВременногоХранилища, Новый Структура("АдресВременногоХранилища,ИмяФайла,ПолноеИмя,Путь,Родитель,ЭтоФайл", АдресВременногоХранилища, Файл.Имя, Файл.ПолноеИмя, ДиалогОткрытияФайла.Каталог, Родитель, Ложь));
				
			КонецЦикла;
			Для Каждого Файл Из МассивФайлов Цикл
				ВыбранноеИмя = Файл.ПолноеИмя;
				Файл = Новый Файл(ВыбранноеИмя);
				ОписаниеФайла = СтрШаблон(НСтр("ru = 'Исходный файл: %1; Размер: %2 байт; Изменен: %3'"), Файл.Имя, Файл.Размер(), Файл.ПолучитьВремяИзменения());
				ДвоичныеДанные = Новый ДвоичныеДанные(ВыбранноеИмя);
				АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
				ПоместитьФайлОбъекта(АдресВременногоХранилища, Новый Структура("АдресВременногоХранилища,ИмяФайла,ПолноеИмя,Путь,Родитель,ЭтоФайл,ОписаниеФайла", АдресВременногоХранилища, Файл.Имя, Файл.ПолноеИмя, ДиалогОткрытияФайла.Каталог, Родитель, Истина,ОписаниеФайла));
								
			КонецЦикла;
		КонецЕсли;
	Иначе		
		ПоказатьПредупреждение(,НСтр("ru = 'Данная возможность недоступна, так как не подключено расширение работы с файлами.'", "ru"));
	КонецЕсли;
	ОповеститьОбИзменении(Тип("СправочникСсылка.ВебСайт"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНастройкиКлиент(Команда)
	
	ЗаписатьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмпортЭкспорт(Команда)
	
	ОткрытьФорму("Справочник.ВебСайт.Форма.ФормаИмпортаЭкспорта",, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Разбивает строку на несколько строк по указанному разделителю. Разделитель может иметь любую длину.
// В случаях, когда разделителем является строка из одного символа, и не используется параметр СокращатьНепечатаемыеСимволы,
// рекомендуется использовать функцию платформы СтрРазделить.
//
// Параметры:
//  Значение               - Строка - текст с разделителями;
//  Разделитель            - Строка - разделитель строк текста, минимум 1 символ;
//  ПропускатьПустыеСтроки - Булево - признак необходимости включения в результат пустых строк.
//    Если параметр не задан, то функция работает в режиме совместимости со своей предыдущей версией:
//     - для разделителя-пробела пустые строки не включаются в результат, для остальных разделителей пустые строки
//       включаются в результат;
//     - если параметр Строка не содержит значащих символов или не содержит ни одного символа (пустая строка), то в
//       случае разделителя-пробела результатом функции будет массив, содержащий одно значение "" (пустая строка), а
//       при других разделителях результатом функции будет пустой массив.
//  СокращатьНепечатаемыеСимволы - Булево - сокращать непечатаемые символы по краям каждой из найденных подстрок.
//
// Возвращаемое значение:
//  Массив - массив строк.
//
// Пример:
//  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(",один,,два,", ",")
//  - возвратит массив из 5 элементов, три из которых  - пустые: "", "один", "", "два", "";
//  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(",один,,два,", ",", Истина)
//  - возвратит массив из двух элементов: "один", "два";
//  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(" один   два  ", " ")
//  - возвратит массив из двух элементов: "один", "два";
//  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("")
//  - возвратит пустой массив;
//  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("",,Ложь)
//  - возвратит массив с одним элементом: ""(пустая строка);
//  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("", " ")
//  - возвратит массив с одним элементом: "" (пустая строка).
//
Функция РазложитьСтрокуВМассивПодстрок(Знач Значение, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, 
	СокращатьНепечатаемыеСимволы = Ложь) Экспорт
	
	Если Разделитель = "," 
		И ПропускатьПустыеСтроки = Неопределено 
		И СокращатьНепечатаемыеСимволы Тогда 
		
		Результат = СтрРазделить(Значение, ",", Ложь);
		Для Индекс = 0 По Результат.ВГраница() Цикл
			Результат[Индекс] = СокрЛП(Результат[Индекс])
		КонецЦикла;
		Возврат Результат;
		
	КонецЕсли;
	
	Результат = Новый Массив;
	
	// Для обеспечения обратной совместимости.
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
		Если ПустаяСтрока(Значение) Тогда 
			Если Разделитель = " " Тогда
				Результат.Добавить("");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = СтрНайти(Значение, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Значение, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Значение = Сред(Значение, Позиция + СтрДлина(Разделитель));
		Позиция = СтрНайти(Значение, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Значение) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Значение));
		Иначе
			Результат.Добавить(Значение);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция НайтиРодителя(МассивРодителей,Родитель)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВебСайт.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВебСайт КАК ВебСайт
	|ГДЕ
	|	ВебСайт.ЭтоГруппа
	|	И ВебСайт.Наименование = &ИмяПапки
	|	И ВебСайт.Родитель = &Родитель";
	Для каждого ИмяПапки из МассивРодителей цикл
		Запрос.УстановитьПараметр("Родитель",Родитель);
		Запрос.УстановитьПараметр("ИмяПапки",ИмяПапки);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() цикл
			Родитель = Выборка.Ссылка;	
		КонецЦикла;
	КонецЦикла;
	Возврат Родитель;
	
КонецФункции

&НаСервере
Функция ПоместитьФайлОбъекта(АдресВременногоХранилища, ДополнительныеПараметры)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПолноеИмяПути = Сред(ДополнительныеПараметры.ПолноеИмя, СтрДлина(ДополнительныеПараметры.Путь) + 1);
	ПолноеИмя = Лев(ПолноеИмяПути, СтрДлина(ПолноеИмяПути) - СтрДлина(ДополнительныеПараметры.ИмяФайла));
	
	НайденныйРодитель = ДополнительныеПараметры.Родитель;
	Если СтрДлина(ПолноеИмя) > 1 Тогда
		Массив = РазложитьСтрокуВМассивПодстрок(ПолноеИмя, ПолучитьРазделительПути(), Истина); 
		НайденныйРодитель = НайтиРодителя(Массив,НайденныйРодитель);
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВебСайт.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ВебСайт КАК ВебСайт
		|ГДЕ
		|	ВебСайт.ЭтоГруппа = &ЭтоГруппа
		|	И ВебСайт.Родитель = &Родитель
		|	И ВебСайт.Наименование = &Наименование";
	Запрос.УстановитьПараметр("ЭтоГруппа", 		НЕ ДополнительныеПараметры.ЭтоФайл);
	Запрос.УстановитьПараметр("Родитель", 		НайденныйРодитель);
	Запрос.УстановитьПараметр("Наименование", 	ДополнительныеПараметры.ИмяФайла);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Если ДополнительныеПараметры.ЭтоФайл Тогда
			НоваяСтраница = Справочники.ВебСайт.СоздатьЭлемент();
		Иначе
			НоваяСтраница = Справочники.ВебСайт.СоздатьГруппу();
		КонецЕсли;
	Иначе
		// Группа уже создана, вернем ее.
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	НоваяСтраница.Наименование 	= ДополнительныеПараметры.ИмяФайла;
	НоваяСтраница.Родитель 		= НайденныйРодитель;
	Если ДополнительныеПараметры.ЭтоФайл Тогда
		НоваяСтраница.ТипФайла 		= Справочники.ВебСайт.ТипФайла(ДополнительныеПараметры.ИмяФайла);
		ДвоичныеДанные 				= ПолучитьИзВременногоХранилища(АдресВременногоХранилища);		
		НоваяСтраница.ХранилищеФайла= Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(?(СтрНайти(НоваяСтраница.ТипФайла, "text/") > 0, 9, 0)));
		УдалитьИзВременногоХранилища(АдресВременногоХранилища);
		НоваяСтраница.ОписаниеФайла = ДополнительныеПараметры.ОписаниеФайла;			
		НоваяСтраница.Расширение 	= Справочники.ВебСайт.РасширениеБезТочки(Справочники.ВебСайт.ПолучитьРасширениеИмениФайла(ДополнительныеПараметры.ИмяФайла));
		НоваяСтраница.ОтносительнаяСсылка = НоваяСтраница.СформироватьОтносительнуюСсылку();
	КонецЕсли;
	
	НоваяСтраница.ОбменДанными.Загрузка = Истина;	
	НоваяСтраница.Записать();
	
	Если НоваяСтраница.ПометкаУдаления = Истина Тогда
		НоваяСтраница.УстановитьПометкуУдаления(Ложь);
	КонецЕсли;
	
	Возврат НоваяСтраница.Ссылка;
	
КонецФункции

&НаСервере
Процедура ПрочитатьНастройки()
	
	УстановитьПривилегированныйРежим(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройки()
	
	УстановитьПривилегированныйРежим(Истина);
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруПодчиненныхЭлементов(Родитель)
	
	Возврат Справочники.ВебСайт.ПолучитьСтруктуруПодчиненныхЭлементов(Родитель);
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьПапку(Команда)
	Если Команда.Имя = "ВыгрузитьПапку" тогда
		ЭлементСправочника = Элементы.Список.ТекущиеДанные;
		Если Не ЭлементСправочника.ЭтоГруппа тогда
			ПоказатьПредупреждение(,"Это файл, небходимо выбрать группу");
			Возврат;
		КонецЕсли;
		ВыгружаемаяПапка = ЭлементСправочника.Ссылка;
	Иначе
		ВыгружаемаяПапка = ПредопределенноеЗначение("Справочник.ВебСайт.ПустаяСсылка");
	КонецЕсли;
	Если ПодключитьРасширениеРаботыСФайлами() Тогда
		Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.Фильтр = НСтр("ru = Все файлы (*.*)|*.*'");
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = Сохранить как...'");
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			ВыбранныйКаталог = ДиалогОткрытияФайла.Каталог;
			МассивПодчиненныхЭлементов = ПолучитьСтруктуруПодчиненныхЭлементов(ВыгружаемаяПапка);
			Для каждого Элемент из МассивПодчиненныхЭлементов цикл
				ПолноеИмя = ВыбранныйКаталог + Элемент.Путь; 
				Если Элемент.ЭтоПапка тогда
					СоздатьКаталог(ПолноеИмя);
				Иначе
					Данные = ПолучитьИзВременногоХранилища(Элемент.АдресФайла);
					Файл = новый Файл(ПолноеИмя);
					Если Данные<>Неопределено и Файл.Существует() Тогда
						УдалитьФайлы(ПолноеИмя);
					КонецЕсли;			
					Данные.Записать(ПолноеИмя);
					УдалитьИзВременногоХранилища(Элемент.АдресФайла);
				КонецЕсли;
			КонецЦикла;		
		КонецЕсли;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Данные выгруженны в каталог:"+Символы.ПС+ВыбранныйКаталог;
		Сообщение.Сообщить();
	Иначе		
		ПоказатьПредупреждение(,НСтр("ru = 'Данная возможность недоступна, так как не подключено расширение работы с файлами.'", "ru"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьФайл(Команда)
	ЭлементСправочника = Элементы.Список.ТекущиеДанные;
	Если ЭлементСправочника.ЭтоГруппа тогда
		ПоказатьПредупреждение(,"Это группа, небходимо выбрать файл");
		Возврат;
	КонецЕсли;
	Если ПодключитьРасширениеРаботыСФайлами() Тогда
		Режим = РежимДиалогаВыбораФайла.Сохранение;
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.ПолноеИмяФайла = ЭлементСправочника.Наименование;
		ДиалогОткрытияФайла.Фильтр = НСтр("ru = Все файлы (*.*)|*.*'");
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = Сохранить как...'");
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			ВыбранноеИмя = ДиалогОткрытияФайла.ПолноеИмяФайла;
			АдресФайла = ПолучитьФайлНаСервере(ЭлементСправочника.Ссылка);
			Данные = ПолучитьИзВременногоХранилища(АдресФайла);
			Файл = новый Файл(ВыбранноеИмя);
			Если Данные<>Неопределено и Файл.Существует() Тогда
				УдалитьФайлы(ВыбранноеИмя);
			КонецЕсли;			
			Данные.Записать(ВыбранноеИмя);
			УдалитьИзВременногоХранилища(АдресФайла);
		КонецЕсли;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Файл выгружен:"+Символы.ПС+ВыбранноеИмя;
		Сообщение.Сообщить();
	Иначе		
		ПоказатьПредупреждение(,НСтр("ru = 'Данная возможность недоступна, так как не подключено расширение работы с файлами.'", "ru"));
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьФайлНаСервере(ЭлементСправочника)	
	Возврат Справочники.ВебСайт.ПолучитьФайлНаСервере(ЭлементСправочника);
КонецФункции

&НаСервереБезКонтекста
Процедура ОчиститьНаСервере()
	
	Выб = Справочники.ВебСайт.Выбрать();
	Пока Выб.Следующий() Цикл
		Попытка
			Выб.Ссылка.ПолучитьОбъект().Удалить();	
		Исключение
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	ОчиститьНаСервере();
КонецПроцедуры

#КонецОбласти