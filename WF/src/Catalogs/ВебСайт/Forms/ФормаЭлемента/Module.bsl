
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.Редактирование.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	ОбновитьВидимостьДоступность();
	
	Если Объект.Ссылка.Пустая() Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.Наименование;
	Иначе
		Если ЭтоТекстовыйФайл() Тогда
			ЭтаФорма.ТекущийЭлемент = Элементы.ТекстФайла;
			ОбновитьСписокПараметров();
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьОтносительныйURL();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Элементы.Редактирование.ТекущаяСтраница = Элементы.Текст Тогда
		ТекущийОбъект.ХранилищеФайла = Новый ХранилищеЗначения(ТекстФайла, Новый СжатиеДанных(9));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбновитьОтносительныйURL();
	ЭтаФорма.Прочитать();
	ОбновитьОтображениеДанных();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипФайлаПриИзменении(Элемент)
	
	ОбновитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ЗагрузитьФайл

&НаКлиенте
Процедура ЗагрузитьФайл(Команда)
	
	Перем ВыбранноеИмя;
	Перем АдресВременногоХранилища;

	Если ПодключитьРасширениеРаботыСФайлами() Тогда
		Режим = РежимДиалогаВыбораФайла.Открытие;
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		ДиалогОткрытияФайла.Фильтр = НСтр("ru = 'Все файлы (*.*)|*.*'");
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите файл'");
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			ВыбранноеИмя = ДиалогОткрытияФайла.ПолноеИмяФайла;
			Файл = Новый Файл(ВыбранноеИмя);
			Объект.ОписаниеФайла = СтрШаблон(НСтр("ru = 'Исходный файл: %1; Размер: %2 байт; Изменен: %3'"), Файл.Имя, Файл.Размер(), Файл.ПолучитьВремяИзменения());
			Объект.Наименование = СокрЛП(Файл.Имя);
			АдресВременногоХранилища = "";
			НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗагрузитьФайлЗавершение", ЭтотОбъект, Новый Структура("АдресВременногоХранилища,ОписаниеФайла,ИмяФайла", АдресВременногоХранилища,ОБъект.ОписаниеФайла,Файл.Имя)), АдресВременногоХранилища, ВыбранноеИмя, Ложь,);
		КонецЕсли;
	Иначе		
		ПоказатьПредупреждение(,НСтр("ru = 'Данная возможность недоступна, так как не подключено расширение работы с файлами.'", "ru"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьФайлОбъекта(АдресВременногоХранилища)
	
	УстановитьПривилегированныйРежим(Истина);
	ЭлементСправочника 					= РеквизитФормыВЗначение("Объект");
	ДвоичныеДанные 						= ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	ЭлементСправочника.Расширение 		= Справочники.ВебСайт.РасширениеБезТочки(Справочники.ВебСайт.ПолучитьРасширениеИмениФайла(Объект.Наименование));
	ЭлементСправочника.ХранилищеФайла 	= Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(?(СтрНайти(НРег(Объект.ТипФайла), "text/") > 0, 9, 0)));
	ЭлементСправочника.Записать();
	
	Модифицированность = Ложь;
	УдалитьИзВременногоХранилища(АдресВременногоХранилища);
	ЗначениеВРеквизитФормы(ЭлементСправочника, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлЗавершение(Результат, Адрес, ВыбранноеИмя, ДополнительныеПараметры) Экспорт
    
    Если Результат И Адрес <> Неопределено и Адрес <> "" Тогда
        ПоместитьФайлОбъекта(Адрес);
		Объект.ОписаниеФайла = ДополнительныеПараметры.ОписаниеФайла;
		Если ПустаяСтрока(Объект.ТипФайла) Тогда
			Объект.ТипФайла = ТипФайла(ДополнительныеПараметры.ИмяФайла);
		КонецЕсли;
		Записать();
		ОбновитьВидимостьДоступность();
		Модифицированность = Ложь;
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Ошибка при загрузке файла в хранилище...'"));
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СохранитьФайл

&НаСервере
Функция ПолучитьФайлНаСервере()
	ЭлементСправочника = РеквизитФормыВЗначение("Объект");	
	ДанныеФайла = ЭлементСправочника.ХранилищеФайла.Получить();
	Если ТипЗнч(ДанныеФайла)=Тип("Строка") Тогда
		ВремФайл = ПолучитьИмяВременногоФайла();
		Текст = Новый ЗаписьТекста(ВремФайл, КодировкаТекста.UTF8);
		Текст.Записать(ДанныеФайла);
		Текст.Закрыть();
		ДанныеФайла = Новый ДвоичныеДанные(ВремФайл);
		УдалитьФайлы(ВремФайл);
	КонецЕсли;
	Возврат ПоместитьВоВременноеХранилище(ДанныеФайла);
КонецФункции

&НаКлиенте
Процедура СохранитьФайл(Команда)
	Если ВычислитьКод("РеквизитФормыВЗначение(""Объект"").ХранилищеФайла.Получить()=Неопределено") Тогда
		ПоказатьПредупреждение(, НСтр("ru = Нет сохраненного в системе файла''"));
	ИначеЕсли ПодключитьРасширениеРаботыСФайлами() Тогда
		Режим = РежимДиалогаВыбораФайла.Сохранение;
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.ПолноеИмяФайла = Объект.Наименование;
		ДиалогОткрытияФайла.Фильтр = НСтр("ru = Все файлы (*.*)|*.*'");
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = Сохранить как...'");
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			ВыбранноеИмя = ДиалогОткрытияФайла.ПолноеИмяФайла;
			АдресФайла = ПолучитьФайлНаСервере();
			Данные = ПолучитьИзВременногоХранилища(АдресФайла);
			Файл = новый Файл(ВыбранноеИмя);
			Если Данные<>Неопределено и Файл.Существует() Тогда
				УдалитьФайлы(ВыбранноеИмя);
			КонецЕсли;			
			Данные.Записать(ВыбранноеИмя);
		КонецЕсли;
	Иначе		
		ПоказатьПредупреждение(,НСтр("ru = 'Данная возможность недоступна, так как не подключено расширение работы с файлами.'", "ru"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция КодПроверитьНаСервере(Код, СкрытыйКод) Экспорт
	
	Перем Задание, Параметры;
	                     
	Попытка
		Выполнить("Если 1 = 2 Тогда " + СкрытыйКод + Символы.ПС + Код + Символы.ПС + "КонецЕсли;");
		Возврат Истина;
	Исключение
		Возврат ОписаниеОшибки();
	КонецПопытки;
	
КонецФункции

&НаСервере
Функция КодПроверитьНаКлиенте(Код, СкрытыйКод)
	
	Перем Задание, Параметры;
	
	Попытка
		Выполнить("Если 1 = 2 Тогда " + СкрытыйКод + Символы.ПС + Код + Символы.ПС + "КонецЕсли;");
		Возврат Истина;
	Исключение
		Возврат ОписаниеОшибки();
	КонецПопытки;
	
КонецФункции

&НаКлиенте
Функция ПроверитьКод(Код, СкрытыйКод, ЭУ=Неопределено, НаСервере) Экспорт
	
	Ответ = ?(НаСервере, КодПроверитьНаСервере(Код, СкрытыйКод), КодПроверитьНаКлиенте(Код, СкрытыйКод));
	Если Ответ <> Истина Тогда
		тОш = НСтр("ru = 'Ошибка компиляции при вычислении выражения или выполнении фрагмента кода:'") + " {(";
		П = СтрНайти(Ответ, тОш);
		Если П > 0 Тогда
			Ответ = Сред(Ответ, П+СтрДлина(тОш));
			П = СтрНайти(Ответ, ")}");
			тОш = Лев(Ответ, П-1);			
			Ответ = Сред(Ответ, П+2);
			П = СтрНайти(тОш, ",");
			Если П>0 Тогда
				Попытка
					НС = Число(СтрЗаменить(СокрЛП(Лев(тОш, П-1)), Символы.НПП, ""));
					НК = Число(СтрЗаменить(СокрЛП(Сред(тОш, П+1)), Символы.НПП, ""));
					НС = НС - 1;
					тОш = ""+НС+","+НК;
					Если ЭУ <> Неопределено Тогда
						ЭУ.УстановитьГраницыВыделения(НС, НК, НС, НК);
					КонецЕсли;
				Исключение
				КонецПопытки;
			КонецЕсли;
			Ответ = "(" + тОш + ")" + Ответ;
		КонецЕсли;		
		Возврат ?(ПустаяСтрока(Ответ), НСтр("ru = 'Неизвестная ошибка.'"), Ответ);
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура КодПроверить(Команда)
	
	ОчиститьСообщения();            
	СкрытыйКод = "Тело = """"; Запрос = Новый HTTPЗапрос(); ОтносительныйURL = """"; Алгоритм = """"; ИмяФайла = ""index.html""; Путь = """"; ХранилищеФайла = новый ХранилищеЗначения(Неопределено); 
	|Элемент=неопределено; Переменные = Новый Структура; Результат = Неопределено; ЭтоPOST = Ложь; ПараметрыЗапроса = Новый Структура; АвторизованныйПользователь = Справочники.ВебСайт_Пользователи.ПустаяСсылка;";
	Ответ = ПроверитьКод(Объект.АлгоритмОбработки, СкрытыйКод, Элементы.АлгоритмОбработки, Истина);
	Если Ответ<>Истина Тогда
		Сообщить(Ответ);
	Иначе
	    Сообщить("Ошибок не обнаружено");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодЗакомментироватьБлок(Команда)
	ЗакомментироватьБлок(ЭтаФорма, Элементы.АлгоритмОбработки, Объект.АлгоритмОбработки);
КонецПроцедуры

&НаКлиенте
Процедура ЗакомментироватьБлок(Форма, ЭУ, РеквезитЭУ) Экспорт
	
	НачалоСтроки = 0; НачалоКолонки = 0; КонецСтроки = 0; КонецКолонки = 0;
	
	ЭУ.ПолучитьГраницыВыделения(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки);
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(РеквезитЭУ);
	
	ПоследняяСтрока = ТекстовыйДокумент.ПолучитьСтроку(КонецСтроки);
	ВыделеноСимволовНаПоследнейСтроке = СтрДлина(Лев(ПоследняяСтрока, КонецКолонки - 1));
	ЗакомментироватьПоследнююСтроку = Истина;
	Если (НачалоСтроки <> КонецСтроки) И ВыделеноСимволовНаПоследнейСтроке = 0 Тогда
		ЗакомментироватьПоследнююСтроку = Ложь;
	КонецЕсли;
	
	МаксимальныйОтступ = 0;
	МинимальныйОтступ = 0;
	Для Индекс = НачалоСтроки По КонецСтроки Цикл
		Строка = ТекстовыйДокумент.ПолучитьСтроку(Индекс);
		Строка = СтрЗаменить(Строка, "  ", "    ");
		СимволовСлева = СтрНайти(Строка, СокрЛП(Строка));
		МаксимальныйОтступ = Макс(СимволовСлева, МаксимальныйОтступ);
		МинимальныйОтступ = ?(МинимальныйОтступ = 0, МаксимальныйОтступ, МинимальныйОтступ);
		МинимальныйОтступ  = Мин(МаксимальныйОтступ, МинимальныйОтступ );
	КонецЦикла;
	
	ТексДляВыделения = "";
	КонСтроки = ?(ЗакомментироватьПоследнююСтроку, КонецСтроки, КонецСтроки - 1); 
	Для Индекс = НачалоСтроки По КонСтроки Цикл
		Строка = ТекстовыйДокумент.ПолучитьСтроку(Индекс);
		Строка = СтрЗаменить(Строка, "  ", "    ");
		Строка = Лев(Строка, МинимальныйОтступ-1) + "//" + Сред(Строка, МинимальныйОтступ);
		ТекстовыйДокумент.ЗаменитьСтроку(Индекс, Строка);
		ТексДляВыделения = ТексДляВыделения + Символы.ПС + Строка;
	КонецЦикла;
	
	РеквезитЭУ = ТекстовыйДокумент.ПолучитьТекст();
	
	Форма.ТекущийЭлемент = ЭУ;
	ЭУ.УстановитьГраницыВыделения(НачалоСтроки, 1, КонецСтроки + ?(ЗакомментироватьПоследнююСтроку, 1, 0), 1);
	
КонецПроцедуры

&НаКлиенте
Процедура РаскомментироватьБлок(Форма, ЭУ, РеквезитЭУ) Экспорт
	
	НачалоСтроки = 0; НачалоКолонки = 0; КонецСтроки = 0; КонецКолонки = 0;
	ЭУ.ПолучитьГраницыВыделения(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки);		
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(РеквезитЭУ);
	
	ПоследняяСтрока = ТекстовыйДокумент.ПолучитьСтроку(КонецСтроки);
	ВыделеноСимволовНаПоследнейСтроке = СтрДлина(Лев(ПоследняяСтрока, КонецКолонки - 1));
	ЗакомментироватьПоследнююСтроку = Истина;
	Если (НачалоСтроки <> КонецСтроки) И ВыделеноСимволовНаПоследнейСтроке = 0 Тогда
		ЗакомментироватьПоследнююСтроку = Ложь;
	КонецЕсли;
	
	КонСтроки = ?(ЗакомментироватьПоследнююСтроку, КонецСтроки, КонецСтроки - 1); 
	Для Индекс = НачалоСтроки По КонСтроки Цикл
		Строка = ТекстовыйДокумент.ПолучитьСтроку(Индекс);
		Вхождение = СтрНайти(Строка, "//");
		Если Вхождение > 0 Тогда
			Строка = Лев(Строка, Вхождение-1) + Сред(Строка, Вхождение + 2);
		КонецЕсли; 
		ТекстовыйДокумент.ЗаменитьСтроку(Индекс, Строка);
	КонецЦикла;
	
	РеквезитЭУ = ТекстовыйДокумент.ПолучитьТекст();	
	Форма.ТекущийЭлемент = ЭУ;
	ЭУ.УстановитьГраницыВыделения(НачалоСтроки, 1, КонецСтроки + ?(ЗакомментироватьПоследнююСтроку, 1, 0), 1);
	
КонецПроцедуры

&НаКлиенте
Процедура КодРаскомментироватьБлок(Команда)
	РаскомментироватьБлок(ЭтаФорма, Элементы.АлгоритмОбработки, Объект.АлгоритмОбработки);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьВидимостьДоступность()
	
	Данные = РеквизитФормыВЗначение("Объект").ХранилищеФайла.Получить();
	Попытка
		Картинка = Новый Картинка(Данные);
		Если Картинка.Вид <> ВидКартинки.Пустая И Картинка.Формат() <> ФорматКартинки.НеизвестныйФормат Тогда
			Элементы.ФорматКартинкиСтрокой.Заголовок = СтрШаблон(НСтр("ru = 'Формат: %1'"), Картинка.Формат());
			АдресИзображения = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "ХранилищеФайла");
			Элементы.Редактирование.ТекущаяСтраница = Элементы.Изображение;
			Возврат;
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Если ЭтоТекстовыйФайл()Тогда
		Элементы.Редактирование.ТекущаяСтраница = Элементы.Текст;
		Элементы.АлгоритмЗаполнения.Видимость = Истина;
		Элементы.ТекстВставитьПараметр.Видимость = Истина;
		ТекстФайла = ВебСайт_HTTPСервисы.ПолучитьТекстИзДвоичныхДанных(Данные);
		Элементы.ТекстВставитьПараметр.Видимость = Истина;
	Иначе
		Элементы.Редактирование.ТекущаяСтраница = Элементы.Файл;
	КонецЕсли;
	
	Если ЭтоPug() Тогда
		Элементы.АлгоритмЗаполнения.Видимость = Ложь;	
		Элементы.ТекстВставитьПараметр.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ТипФайла(ИмяФайла)
	Возврат Справочники.ВебСайт.ТипФайла(ИмяФайла);
КонецФункции

&НаСервере
Функция ВычислитьКод(Код, Параметр = Неопределено)
	Возврат Вычислить(Код)
КонецФункции

&НаСервере
Функция ЭтоТекстовыйФайл()
	Возврат СтрНайти(НРег(Объект.ТипФайла), "text/") > 0 ИЛИ
		СтрНайти(";json;md;txt;yml;log;cvs;less;coffee;pug;", ";" + НРег(Объект.Расширение) + ";") > 0
КонецФункции

&НаСервере
Функция ЭтоPug()
	
	Если НРег(Объект.Расширение) = "pug" Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции	

&НаСервере
Процедура ОбновитьОтносительныйURL()
	
	ОтносительныйURL = Справочники.ВебСайт.ОтносительныйURLСтраницы(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстФайлаПриИзменении(Элемент)
	
	ОбновитьСписокПараметров();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокПараметров()
	
	ТаблицаПараметров.Загрузить(ВебСайт_Шаблонизатор.ПолучитьТаблицуПараметов(ТекстФайла));
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметровНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ПараметрыПеретаскивания.Значение = "Переменные.Вставить("+Элемент.ТекущиеДанные.Параметр+","""");"+Символы.ПС;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстВставитьПараметр(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВставитьПараметрЗавершение",ЭтаФорма);
	ПоказатьВводСтроки(ОписаниеОповещения,,"Введите имя параметра",,Ложь);
				
КонецПроцедуры

&НаКлиенте
Процедура ВставитьПараметрЗавершение(ИмяПараметра,Параметры) Экспорт

	Если ЗначениеЗаполнено(ИмяПараметра) тогда
		ПараметрТекст = СтрШаблон("<!---%1--->",ИмяПараметра);
		Если СтрЧислоВхождений(ТекстФайла,ПараметрТекст) = 0 тогда
			Элементы.ТекстФайла.ВыделенныйТекст = ПараметрТекст;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Элементы.АлгоритмОбработки.ВыделенныйТекст = "Переменные.Вставить("""+Элемент.ТекущиеДанные.Параметр+""","""");"+Символы.ПС;
	
КонецПроцедуры
	
#КонецОбласти