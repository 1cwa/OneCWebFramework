
Функция ПолучитьОтносительнуюСсылкуСтраницыАвторизации() Экспорт
	
	Если ВебСайт_HTTPСервисы.ВебСайтХранитсяВМакете() тогда
		Возврат Обработки.ВебСайт_Шаблоны.ПолучитьОтносительнуюСсылкуСтраницыАвторизации();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВебСайт.ОтносительнаяСсылка КАК ОтносительнаяСсылка
	|ИЗ
	|	Справочник.ВебСайт КАК ВебСайт
	|ГДЕ
	|	ВебСайт.СтраницаАвторизации";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		Возврат Выборка.ОтносительнаяСсылка;
	КонецЦикла;
	
	Возврат "";
	
КонецФункции

Функция ВПроектеЕстьАвторизация() Экспорт
	
	Возврат ЗначениеЗаполнено(ПолучитьОтносительнуюСсылкуСтраницыАвторизации());
	
КонецФункции

Функция ВыполнитьРегистрациюПользователя(Логин) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВебСайт_Пользователи.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВебСайт_Пользователи КАК ВебСайт_Пользователи
	|ГДЕ
	|	ВебСайт_Пользователи.Логин = &Логин";
	Запрос.УстановитьПараметр("Логин",Логин);
	Результат = Запрос.Выполнить();
	Если не Результат.Пустой() тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НовыйПользователь = Справочники.ВебСайт_Пользователи.СоздатьЭлемент();
	
	НовыйПользователь.Наименование = Логин;
	НовыйПользователь.Логин = Логин;
	НовыйПользователь.Пароль = ПолучитьПароль();
	НовыйПользователь.Записать();
	
	Возврат НовыйПользователь;
	
КонецФункции

Функция ПолучитьПароль()
	
	ГСЧ = Новый ГенераторСлучайныхЧисел();
	
	Пароль = "";
	ИспользуемыеСимволы = "01243456789AQWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm";
	Н = СтрДлина(ИспользуемыеСимволы );
	Пока СтрДлина(Пароль) < 7 Цикл
		НекийСимвол = Сред(ИспользуемыеСимволы ,(ГСЧ.СлучайноеЧисло(1, Н)),1);
		Пароль = Пароль + НекийСимвол;
	КонецЦикла;        
	Возврат Пароль;
	
КонецФункции

Функция ВыполнитьАвторизациюПользователя(Логин, Пароль, Запрос,Ответ) Экспорт
	
	ЗапросПользователя = Новый Запрос;
	ЗапросПользователя.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВебСайт_Пользователи.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВебСайт_Пользователи КАК ВебСайт_Пользователи
	|ГДЕ
	|	ВебСайт_Пользователи.Логин = &Логин
	|	И ВебСайт_Пользователи.Пароль = &Пароль";
	ЗапросПользователя.УстановитьПараметр("Логин",Логин);
	ЗапросПользователя.УстановитьПараметр("Пароль",Пароль);
	Результат = ЗапросПользователя.Выполнить();
	Если Результат.Пустой() тогда
		Возврат неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	ПользовательВебСайта = Выборка.Ссылка.ПолучитьОбъект();
	ПользовательВебСайта.Токен = Строка(Новый УникальныйИдентификатор);
	ПользовательВебСайта.ТокенСрокЖизни = ТекущаяДата() + ПолучитьВремяЖизниАвторизацииВСекундах();
	ПользовательВебСайта.Записать();
		
	Ответ = Новый HTTPСервисОтвет(302);
	Ответ.Заголовки.Очистить();
	Ответ.Заголовки.Вставить("Set-Cookie","token="+ПользовательВебСайта.Токен+"; Max-Age="
		+Формат(ПолучитьВремяЖизниАвторизацииВСекундах(),"ЧГ=0")+";HttpOnly;SameSite;"); 
	ОтносительныйURLПеренаправления = ВебСайт_HTTPСервисы.ПолучитьОтносительнуюСсылкуОсновнойСтраницы();
	НовыйURL = СокрЛП(Запрос.БазовыйURL) + "/" + ОтносительныйURLПеренаправления;
	Ответ.Заголовки.Вставить("Location", НовыйURL);
	Ответ.Заголовки.Вставить("Content-Location", НовыйURL);
	
	Возврат ПользовательВебСайта.Ссылка;	
	
КонецФункции

Функция ПолучитьАвторизованногоПользователя(ЗаголовкиЗапроса) Экспорт
	
	КукиСтрокой = ЗаголовкиЗапроса.Получить("Cookie");
	Если не ЗначениеЗаполнено(КукиСтрокой) тогда
		Возврат Неопределено;
	КонецЕсли;
	МассивКуки = СтрРазделить(КукиСтрокой,";");
	
	Токен = "";
	
	Для каждого Куки из МассивКуки цикл
		Если СтрНайти(Куки,"token=") <> 0 тогда
			Токен = СтрЗаменить(Куки,"token=","");	
			Прервать;
		КонецЕсли;
	КонецЦикла;	
	
	Если не ЗначениеЗаполнено(Токен) тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПользовательВебСайта = ПолучитьПользователяВебСайтаПоТокену(Токен);
	
	Возврат ПользовательВебСайта;
	
КонецФункции

Функция ПолучитьПользователяВебСайтаПоТокену(Токен)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВебСайт_Пользователи.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВебСайт_Пользователи КАК ВебСайт_Пользователи
	|ГДЕ
	|	ВебСайт_Пользователи.Токен = &Токен
	|	И ВебСайт_Пользователи.ТокенСрокЖизни > &ТекущаяДата";
	Запрос.УстановитьПараметр("Токен",Токен);
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		Возврат Выборка.Ссылка;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьВремяЖизниАвторизацииВСекундах()
	
	Возврат 12*60*60;//12 часов	
	
КонецФункции

Процедура УдалитьДанныеОбАвторизации(Запрос,Ответ) Экспорт
	
	ОтносительныйURLПеренаправления = ВебСайт_HTTPСервисы.ПолучитьОтносительнуюСсылкуОсновнойСтраницы();
	Ответ = Новый HTTPСервисОтвет(302);
	Ответ.Заголовки.Очистить();
	НовыйURL = СокрЛП(Запрос.БазовыйURL) + "/" + ОтносительныйURLПеренаправления;
	Ответ.Заголовки.Вставить("Location", НовыйURL);
	Ответ.Заголовки.Вставить("Content-Location", НовыйURL);	
	Ответ.Заголовки.Вставить("Set-Cookie","token=;");
	
КонецПроцедуры
